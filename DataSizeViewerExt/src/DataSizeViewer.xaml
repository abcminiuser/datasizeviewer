<UserControl x:Class="FourWalledCubicle.DataSizeViewerExt.DataSizeViewerUI"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:vsfx="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.10.0"
             xmlns:dsv="clr-namespace:FourWalledCubicle.DataSizeViewerExt"
             xmlns:cmp="clr-namespace:FourWalledCubicle.DataSizeViewerExt.Comparer"
             xmlns:cvt="clr-namespace:FourWalledCubicle.DataSizeViewerExt.Converter"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="800"
             Name="ELFSymbolSizes"
             Background="{DynamicResource {x:Static vsfx:VsBrushes.CommandBarGradientKey}}"
             DataContext="{Binding RelativeSource={RelativeSource Self}}">

    <UserControl.Resources>
        <Style x:Key="horizontalContentAlignmentStyleLeft" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
        </Style>
        <Style x:Key="horizontalContentAlignmentStyleRight" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="HorizontalContentAlignment" Value="Right"/>
        </Style>

        <cmp:ItemSizeComparer x:Key="ItemSizeComparer"/>

        <cvt:SymbolValidColorConverter x:Key="SymbolValidConverter"/>

        <DataTemplate x:Key="ListViewHeaderTemplateDescendingSorting">
            <DockPanel>
                <TextBlock Text="{Binding}"/>
                <Path x:Name="arrow"
                    StrokeThickness = "1"
                    Fill            = "gray"
                    Data            = "M 5,10 L 15,10 L 10,5 L 5,10"/>
            </DockPanel>
        </DataTemplate>

        <DataTemplate x:Key="ListViewHeaderTemplateAscendingSorting">
            <DockPanel>
                <TextBlock Text="{Binding}"/>
                <Path x:Name="arrow"
                    StrokeThickness = "1"
                    Fill            = "gray"
                    Data            = "M 5,5 L 10,10 L 15,5 L 5,5"/>
            </DockPanel>
        </DataTemplate>

        <DataTemplate x:Key="ListViewHeaderTemplateNoSorting">
            <DockPanel>
                <TextBlock Text="{Binding}"/>
            </DockPanel>
        </DataTemplate>
    </UserControl.Resources>

    <DockPanel>
        <ToolBarPanel DockPanel.Dock="Top" Orientation="Horizontal" Background="{DynamicResource {x:Static vsfx:VsBrushes.CommandBarGradientKey}}">            
            <TextBlock Grid.Column="0" Margin="6" Text="Show symbols from:"/>
            <ComboBox Grid.Column="1" Name="projectList" Margin="2" MinWidth="300" Style="{StaticResource {x:Static ToolBar.ComboBoxStyleKey}}"/>

            <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Margin="5,0,5,0" />

            <Button Click="RefreshSymbolTable_Click" ToolTip="Reload Symbols" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                <Image Width="16" Source="/DataSizeViewer;component/Resources/Icon_Refresh.png"/>
            </Button>

            <Button Click="Settings_Click" ToolTip="Settings" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                <Image Width="16" Source="/DataSizeViewer;component/Resources/Icon_Settings.png"/>
            </Button>

            <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Margin="5,0,5,0" />

            <CheckBox VerticalAlignment="Center" IsChecked="{Binding mShowTextSegment, Mode=TwoWay}" ToolTip="Show Text Segment" Margin="5,0,5,0">
                Text Segment
            </CheckBox>

            <CheckBox VerticalAlignment="Center" IsChecked="{Binding mShowDataSegment, Mode=TwoWay}" ToolTip="Show Data Segment" Margin="5,0,5,0">
                Data Segment
            </CheckBox>

            <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Margin="5,0,5,0" />

            <Label Margin="5,0,0,0" VerticalAlignment="Center">Filter:</Label>
            <TextBox Margin="0,5,0,5" Text="{Binding mFilterString, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="250" />
        </ToolBarPanel>

        <Grid DockPanel.Dock="Top" Visibility="Hidden">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="{Binding ElementName=storageColumn, Path=ActualWidth}"/>
                <ColumnDefinition Width="{Binding ElementName=sizeColumn, Path=ActualWidth}"/>
                <ColumnDefinition Width="12"/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0" x:Name="nameColumnStretcher" />
        </Grid>
        
        <Label Name="errorMessage" DockPanel.Dock="Top" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="Visible"/>

        <ListView DockPanel.Dock="Top"
                      Name="symbolSize"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch"
                      DataContext="{Binding mSymbolParser.symbolSizes}"
                      MouseDoubleClick="symbolSize_MouseDoubleClick"
                      dsv:ListViewSorter.CustomListViewSorter="{StaticResource ResourceKey=ItemSizeComparer}"
                      ScrollViewer.CanContentScroll="True"
                      ScrollViewer.VerticalScrollBarVisibility="Auto"
                      BorderThickness="0" 
                      Visibility="Hidden">

            <ListBox.CommandBindings>
                <CommandBinding Command="ApplicationCommands.Copy" CanExecute="symbolSize_CopyCmdCanExecute" Executed="symbolSize_CopyCmdExecuted" />
            </ListBox.CommandBindings>

            <ListView.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Copy" Command="ApplicationCommands.Copy"/>
                </ContextMenu>
            </ListView.ContextMenu>

            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="ToolTip" Value="{Binding Path=Location}" />
                </Style>
            </ListView.ItemContainerStyle>

            <ListView.Resources>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="Foreground" Value="{Binding Converter={StaticResource SymbolValidConverter}}"/>
                </Style>
            </ListView.Resources>

            <ListView.View>
                <GridView>
                    <GridViewColumn x:Name="nameColumn" Width="{Binding ElementName=nameColumnStretcher, Path=ActualWidth}" Header="Symbol Name" DisplayMemberBinding="{Binding Path=Name}" HeaderContainerStyle="{StaticResource horizontalContentAlignmentStyleLeft}"/>
                    <GridViewColumn x:Name="storageColumn" Width="100" Header="Storage" DisplayMemberBinding="{Binding Path=Storage}" HeaderContainerStyle="{StaticResource horizontalContentAlignmentStyleLeft}"/>
                    <GridViewColumn x:Name="sizeColumn" Width="110" Header="Size (bytes)" DisplayMemberBinding="{Binding Path=Size}" HeaderContainerStyle="{StaticResource horizontalContentAlignmentStyleLeft}"/>
                </GridView>
            </ListView.View>
        </ListView>
    </DockPanel>
</UserControl>
