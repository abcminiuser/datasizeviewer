<UserControl x:Class="FourWalledCubicle.DataSizeViewerExt.DataSizeViewerUI"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:vsfx="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.10.0"
             xmlns:dsv="clr-namespace:FourWalledCubicle.DataSizeViewerExt"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="800"
             Name="ELFSymbolSizes"
             Background="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowBackgroundKey}}"
             Foreground="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}"
             DataContext="{Binding RelativeSource={RelativeSource Self}}">

    <UserControl.Resources>
        <dsv:SymbolValidColorConverter x:Key="SymbolValidConverter"/>
    </UserControl.Resources>

    <DockPanel Background="White">
        <ToolBarPanel DockPanel.Dock="Top" Orientation="Horizontal" Background="{DynamicResource {x:Static vsfx:VsBrushes.CommandBarGradientKey}}">
            <ToolBarPanel.Resources>
                <Style TargetType="Label">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}"/>
                </Style>
                <Style TargetType="Separator" BasedOn="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}">
                    <Setter Property="Margin" Value="5,0,5,0"/>
                </Style>
                <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Static ToolBar.ComboBoxStyleKey}}"/>
                <Style TargetType="Button" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"/>
                <Style TargetType="CheckBox">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                </Style>
            </ToolBarPanel.Resources>
            
            <Label Margin="5,0,0,0" VerticalAlignment="Center">Show symbols from:</Label>
            <ComboBox Grid.Column="1" Name="projectList" Margin="2" MinWidth="300"/>

            <Separator/>

            <Button Click="refreshSymbolTable_Click" ToolTip="Reload Symbols" Margin="0,0,5,0">
                <Image Width="18" Source="/DataSizeViewer;component/Resources/Icon_Refresh.png"/>
            </Button>

            <Button Click="settings_Click" ToolTip="Settings">
                <Image Width="18" Source="/DataSizeViewer;component/Resources/Icon_Settings.png"/>
            </Button>

            <Separator/>

            <CheckBox IsChecked="{Binding mShowTextSegment, Mode=TwoWay}" ToolTip="Show Text Segment" Margin="5,0,5,0">
                Text Segment
            </CheckBox>

            <CheckBox IsChecked="{Binding mShowDataSegment, Mode=TwoWay}" ToolTip="Show Data Segment" Margin="5,0,5,0">
                Data Segment
            </CheckBox>

            <Separator/>

            <Label Margin="5,0,0,0" VerticalAlignment="Center">Filter:</Label>
            <TextBox Margin="0,5,0,5" Text="{Binding mFilterString, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="250" />
        </ToolBarPanel>

        <Grid DockPanel.Dock="Top" Visibility="Hidden">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="{Binding ElementName=storageColumn, Path=ActualWidth}"/>
                <ColumnDefinition Width="{Binding ElementName=sizeColumn, Path=ActualWidth}"/>
                <ColumnDefinition Width="20"/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0" x:Name="nameColumnStretcher" />
        </Grid>

        <ListView DockPanel.Dock="Top"
                      Name="symbolSize"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch"
                      DataContext="{Binding mSymbolParser.symbolSizes}"
                      ScrollViewer.CanContentScroll="True"
                      ScrollViewer.VerticalScrollBarVisibility="Auto"
                      BorderThickness="0"
                      Visibility="Visible">

            <ListBox.CommandBindings>
                <CommandBinding Command="ApplicationCommands.Copy" CanExecute="symbolSize_CopyCmdCanExecute" Executed="symbolSize_CopyCmdExecuted" />
            </ListBox.CommandBindings>

            <ListView.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Copy" Command="ApplicationCommands.Copy"/>
                </ContextMenu>
            </ListView.ContextMenu>

            <ListView.Resources>
                <Style TargetType="{x:Type GridViewColumnHeader}">
                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                    <EventSetter Event="Click" Handler="symbolSize_ColumnHeaderClick"/>
                </Style>

                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="Foreground" Value="{Binding Converter={StaticResource SymbolValidConverter}}"/>
                    <Setter Property="ToolTip" Value="{Binding Path=Location}"/>
                    <EventSetter Event="MouseDoubleClick" Handler="symbolSize_MouseDoubleClick" />
                </Style>
            </ListView.Resources>

            <ListView.View>
                <GridView>
                    <GridViewColumn x:Name="nameColumn" Width="{Binding ElementName=nameColumnStretcher, Path=ActualWidth}" DisplayMemberBinding="{Binding Path=Name}">
                        <GridViewColumn.Header>
                            <GridViewColumnHeader Tag="Name">Symbol Name</GridViewColumnHeader>
                        </GridViewColumn.Header>
                    </GridViewColumn>
                    <GridViewColumn x:Name="storageColumn" Width="100" DisplayMemberBinding="{Binding Path=Storage}">
                        <GridViewColumn.Header>
                            <GridViewColumnHeader Tag="Storage">Symbol Name</GridViewColumnHeader>
                        </GridViewColumn.Header>
                    </GridViewColumn>
                    <GridViewColumn x:Name="sizeColumn" Width="110">
                        <GridViewColumn.Header>
                            <GridViewColumnHeader Tag="Size">Size (bytes)</GridViewColumnHeader>
                        </GridViewColumn.Header>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Padding="0,0,10,0" HorizontalAlignment="Right" Text="{Binding Path=Size}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>

        <StackPanel Name="errorMessagePanel" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="Visible">
            <TextBlock Name="errorMessagePrimary" FontSize="18" Margin="6" TextAlignment="Center" Foreground="#FF6E6E6E">
                Primary Error Message Text
            </TextBlock>
            <TextBlock Name="errorMessageSecondary" FontSize="14" FontStyle="Italic" TextWrapping="Wrap" Foreground="#FF6E6E6E">
                Secondary Error Message Text.
            </TextBlock>
        </StackPanel>
    </DockPanel>
</UserControl>
